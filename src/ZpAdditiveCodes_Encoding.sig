175,0
S,ZpAdditiveCodes_Encoding_version,Return the current version of this package,0,0,0,0,0,0,0,82,-38,-38,-38,-38,-38
V,EncodingFlag,1
S,ZpInformationSpace,"Given a linear code C over Z/p^s of type (n; t1,..., ts), return V=(Z/p^s)^t1 x (Z/p^(s-1))^t2 x ··· x Zp^ts, that is, the space of information vectors for C. Note that V is a Z/p^s-submodule of (Z/p^s)^(t1+...+ts) whose first t1 coordinates of V are of order p^s, the next t2 coordinates of order p^(s-1), and so on, until the last ts coordinates of order p. The function also returns the space of information vectors for the corresponding code C_p=Phi_s(C) over GF(p), where Phi_s is Carlet's generalized Gray map; that is, the k-dimensional vector space over GF(p), where k=(st1+(s-1)t2+...+ts). Finally, for the encoding process, it returns two isomorphisms f and f_p from these spaces of information vectors, V and V_p, onto C and C_p, respectively. The map f is given as a bijective map from V to C. Nevertheless, f_p is given as an injective map from V_p to GF(p)^(np^(s−1)), where np^(s−1) is the length of C_p, having the inverse only defined for the elements in C_p subseteq GF(p)^(np^(s−1)). These two maps are related to each other in the sense that Phi_s * f = f_p * Phi_s|Jp, where Phi_s|Jp denotes the restriction to the set of k coordinates Jp=Phi_s(J) subset [1, ..., (t1 +...+ ts)ps−1] as defined in the below reference, for the set J=[1, ..., t1 +...+ ts]. The parameter IsSystematicEncoding specifies whether the map f_p corresponds to a systematic encodings for the code C_p or not. It is set to true by default. In this case, it returns a systematic encoding f_p with respect to the information set I_p given by function ZpInformationSet(C). Indeed, f_p is such that the diagram given in the manual commutes for the encoding f given in the below reference. Otherwise, it returns an encoding f_p, which may not be systematic. In particular, f_p is such that the diagram given in the manual commutes for the encoding f which corresponds to multiplying by the generator matrix given by function ZpMinRowsGeneratorMatrix(C). If C is a linear code over Z4 of type (n; t1, t2), then InformationSpace(C) can also be used. The second output parameter coincides in both functions. However, InformationSpace(C) instead of returning Z4^t1 × pZ2^t2, it returns pZ2^t2 x Z4^t1, and both isomorphisms f and f_p from the spaces of information vectors, V and V_p, onto C and C_p, are also different. Reference: ""Systematic encoding and permutation decoding for Z/p^s-linear codes"", by A. Torres and M. Villanueva, IEEE Trans. Inf. Theory, 68(7), pp 4435-4443, 2022",0,1,0,0,0,0,0,0,0,202,,191,159,175,175,-38,-38
S,ZpInformationSet,"Given a linear code C over Z/p^s of type (n;t1,...,ts), return an information set I subseteq [1,...,n] for C. Moreover, it also returns an information set I_p for the corresponding code C_p=Phi_s(C) over GF(p), where Phi_s is Carlet's generalized Gray map. These information sets I and I_p are returned as a sequence of t1+t2+...+ts and st1+(s-1)t2+...+ts coordinate positions, respectively. The information set I_p coincides with Phi(I) as defined in the below reference, and the encoding map f_p given by function ZpInformationSpace(C) is systematic with respect to the information set I_p. An information set I for C is an ordered set of t1+t2+...+ts coordinate positions such that |C_I|=|C|, where C_I=[v_I : v in C] and v_I is the vector v restricted to the I coordinates. An information set I_p for C_p is an ordered set of st1+(s-1)t2+...+ts coordinate positions such that |(C_p)_(I_p)|=|C_p|=|C|. If C is a linear code over Z4, then function InformationSet(C) can also be used even though both output parameters may be different. Reference: ""Systematic encoding and permutation decoding for Z/p^s-linear codes"", by A. Torres and M. Villanueva, IEEE Trans. Inf. Theory, 68(7), pp 4435-4443, 2022",0,1,0,0,0,0,0,0,0,202,,82,82,-38,-38,-38,-38
S,IsZpInformationSet,"Given a linear code C over Z/p^s of type (n;t1,t2,...,ts) and a sequence I subseteq [1,...,n] or I subseteq [1,...,np^(s-1)], return true if and only if I subseteq [1,...,n] is an information set for C. This function also returns another boolean, which is true if an only if I subseteq [1,...,np^(s-1)] is an information set for the corresponding code C_p=Phi_s(C) over GF(p), where Phi_s is Carlet's generalized Gray map. An information set I for C is an ordered set of t1+t2+...+ts coordinate positions such that |C_I|=|C|, where C_I=[v_I : v in C] and v_I is the vector v restricted to the I coordinates. An information set I_p for C_p is an ordered set of st1+(s-1)t2+...+ts coordinate positions such that |(C_p)^(I_p)|=|C_p|=|C|. If C is over Z4, function IsZpInformationSet(C, I) coincides with function IsInformationSet(C, I), which works only for linear codes over Z4, but the former may perform less efficiently when I subset [1,...,2n]",1,1,1,82,0,148,2,0,0,0,0,0,0,0,82,,0,0,202,,36,36,-38,-38,-38,-38
S,Encoding,"Given a linear code C over Z/p^s of type (n;t1,t2,...,ts) and a sequence L of elements from Z/p^s, return a sequence of codewords from C, and also the corresponding sequence of codewords from C_p = Phi_s(C), given by an injective map, which corresponds to an encoding of the elements of L. The encodings for C and C_p coincide with the ones provided by function ZpInformationSpace(C : IsSystematicEncoding := false). If it detects that L contains more than one information vector, then it computes the encoding for each one of them and returns a sequence of codewords. If it is necessary, zeros are added at the end of the sequence L to complete the last information vector before encoding",1,1,1,82,0,321,2,0,0,0,0,0,0,0,82,,0,0,202,,82,82,-38,-38,-38,-38
S,Encoding,"Given a linear code C over Z/p^s of type (n;t1,t2,...,ts) and a sequence L of elements from GF(p), return a sequence of codewords from C, and also the corresponding sequence of codewords from C_p = Phi_s(C), given by an injective map, which corresponds to an encoding of the elements of L. The encodings for C and C_p coincide with the ones provided by function ZpInformationSpace(C : IsSystematicEncoding := false). If it detects that L contains more than one information vector, then it computes the encoding for each one of them and returns a sequence of codewords. If it is necessary, zeros are added at the end of the sequence L to complete the last information vector before encoding",1,1,1,82,0,85,2,0,0,0,0,0,0,0,82,,0,0,202,,82,82,-38,-38,-38,-38
S,Encoding,"Given a linear code C over Z/p^s of type (n;t1,...,ts) and a matrix M over Z/p^s, returns a sequence of codewords from C, and also the corresponding sequence of codewords from C_p = Phi_s(C), given by an injective map, which corresponds to an encoding of the rows of M. The encodings for C and C_p coincide with the ones provided by function ZpInformationSpace(C : IsSystematicEncoding := false)",0,2,0,0,0,0,0,0,0,190,,0,0,202,,82,82,-38,-38,-38,-38
S,Encoding,"Given a linear code C over Z/p^s of type (n;t1,...,ts) and a matrix M over GF(p), returns a sequence of codewords from C, and also the corresponding sequence of codewords from C_p = Phi_s(C), given by an injective map, which corresponds to an encoding of the rows of M. The encodings for C and C_p coincide with the ones provided by function ZpInformationSpace(C : IsSystematicEncoding := false)",0,2,0,0,0,0,0,0,0,155,,0,0,202,,82,82,-38,-38,-38,-38
S,Encoding,"Given a linear code C over Z/p^s of type (n; t1,...,ts) and an element v from the space V=(Z/p^s)^t1 x (Z/p^(s-1))^t2 x ··· x Zp^ts of information vectors for C, given as a vector of length t1 +...+ ts over Z/p^s), return the codewords c in C and cp = Phi_s(c) in C_p corresponding to an encoding of v in V and (Phi_s|Jp)(v) in Vp, where Phi_s|Jp is the projection of the image of Phi_s onto the coordinates from Jp = Phi([1,..., t1+...+ts]). This encoding for C, denoted by f, corresponds to multiplying an element in V by the generator matrix given by function ZpMinRowsGeneratorMatrix(C), and the encoding for C_p corresponds to the map fp that makes diagram given in the manual commute for the encoding f. Note that f(v) = c and fp((Phi_s|Jp)(v)) = cp. The encodings f and fp coincide with the ones provided by function ZpInformationSpace(C : IsSystematicEncoding := false)",0,2,0,0,0,0,0,0,0,192,,0,0,202,,192,160,-38,-38,-38,-38
S,Encoding,"Given a linear code C over Z/p^s of type (n; t1,...,ts) and an element v from the space Vp = GF(p)^k, where k=st1+(s−1)t2+...+ts, of information vectors for C_p = Phi_s(C), where Phi_s is Carlet’s generalized Gray map, return the codewords c in C and cp = Phi_s(c) in C_p corresponding to an encoding of (Phi_s|Jp)^(−1)(v) in V and v in Vp, respectively, where Phi_s|Jp is the projection of the image of Phi_s onto the coordinates from Jp = Phi([1,..., t1+...+ts]). This encoding for C, denoted by f, corresponds to multiplying an element in V by the generator matrix given by function ZpMinRowsGeneratorMatrix(C), and the encoding for C_p corresponds to the map fp that makes diagram given in the manual commute for the encoding f. Note that f((Phi_s|Jp )^(−1)(v)) = c and fp(v) = cp. The encodings f and fp coincide with the ones provided by function ZpInformationSpace(C : IsSystematicEncoding := false)",0,2,0,0,0,0,0,0,0,160,,0,0,202,,192,160,-38,-38,-38,-38
S,SystematicEncoding,"Given a linear code C over Z/p^s of type (n;t1,t2,...,ts) and a sequence L of elements from Z/p^s, return a sequence of codewords from C, and also the corresponding sequence of codewords from C_p = Phi_s(C). The encodings for C and C_p coincide with the ones provided by function ZpInformationSpace(C). Unlike function Encoding(C, L), in this case, the given encoding for C_p is systematic with respect to the information set Ip given by function ZpInformationSet(C). If it detects that L contains more than one information vector, then it computes the encoding for each one of them and returns a sequence of codewords. If it is necessary, zeros are added at the end of the sequence L to complete the last information vector before encoding",1,1,1,82,0,321,2,0,0,0,0,0,0,0,82,,0,0,202,,82,82,-38,-38,-38,-38
S,SystematicEncoding,"Given a linear code C over Z/p^s of type (n;t1,t2,...,ts) and a sequence L of elements from GF(p), return a sequence of codewords from C, and also the corresponding sequence of codewords from C_p = Phi_s(C). The encodings for C and C_p coincide with the ones provided by function ZpInformationSpace(C). Unlike function Encoding(C, L), in this case, the given encoding for C_p is systematic with respect to the information set Ip given by function ZpInformationSet(C). If it detects that L contains more than one information vector, then it computes the encoding for each one of them and returns a sequence of codewords. If it is necessary, zeros are added at the end of the sequence L to complete the last information vector before encoding",1,1,1,82,0,85,2,0,0,0,0,0,0,0,82,,0,0,202,,82,82,-38,-38,-38,-38
S,SystematicEncoding,"Given a linear code C over Z/p^s of type (n;t1,...,ts) and a matrix M over Z/p^s, returns a sequence of codewords from C, and also the corresponding sequence of codewords from C_p = Phi_s(C). The encodings for C and C_p coincide with the ones provided by function ZpInformationSpace(C). Unlike function Encoding(C, M), in this case, the given encoding for C_p is systematic with respect to the information set Ip given by function ZpInformationSet(C)",0,2,0,0,0,0,0,0,0,190,,0,0,202,,82,82,-38,-38,-38,-38
S,SystematicEncoding,"Given a linear code C over Z/p^s of type (n;t1,...,ts) and a matrix M over GF(p), returns a sequence of codewords from C, and also the corresponding sequence of codewords from C_p = Phi_s(C). The encodings for C and C_p coincide with the ones provided by function ZpInformationSpace(C). Unlike function Encoding(C, M), in this case, the given encoding for C_p is systematic with respect to the information set Ip given by function ZpInformationSet(C)",0,2,0,0,0,0,0,0,0,155,,0,0,202,,82,82,-38,-38,-38,-38
S,SystematicEncoding,"Given a linear code C over Z/p^s of type (n; t1,...,ts) and an element v from the space V=(Z/p^s)^t1 x (Z/p^(s-1))^t2 x ··· x Zp^ts of information vectors for C, given as a vector of length t1 +...+ ts over Z/p^s), return the codewords c in C and cp = Phi_s(c) in C_p corresponding to an encoding of v in V and (Phi_s|Jp)(v) in Vp, where Phi_s|Jp is the projection of the image of Phi_s onto the coordinates from Jp = Phi([1,..., t1+...+ts]). Unlike function Encoding(C, v), in this case, the given encoding for C_p is systematic with respect to the information set Ip given by function ZpInformationSet(C). This encoding for C_p, denoted by fp, corresponds to the systematic encoding with respect to the information set Ip given by function ZpInformationSet(C), and the encoding for C corresponds to the map f that makes diagram given in the manual commute for the encoding fp. Note that f(v) = c and fp((Phi_s|Jp)(v)) = cp. Moreover, since fp is systematic, (cp)_Ip = (Phi_s|Jp)(v). The encodings f and fp coincide with the ones provided by function ZpInformationSpace(C)",0,2,0,0,0,0,0,0,0,192,,0,0,202,,192,160,-38,-38,-38,-38
S,SystematicEncoding,"Given a linear code C over Z/p^s of type (n; t1,...,ts) and an element v from the space Vp = GF(p)^k, where k=st1+(s−1)t2+...+ts, of information vectors for C_p = Phi_s(C), where Phi_s is Carlet’s generalized Gray map, return the codewords c in C and cp = Phi_s(c) in C_p corresponding to an encoding of (Phi_s|Jp)^(−1)(v) in V and v in Vp, respectively, where Phi_s|Jp is the projection of the image of Phi_s onto the coordinates from Jp = Phi([1,..., t1+...+ts]). Unlike function Encoding(C, v), in this case, the given encoding for C_p is systematic with respect to the information set Ip given by function ZpInformationSet(C). This encoding for C_p, denoted by fp, corresponds to the systematic encoding with respect to the information set Ip given by function ZpInformationSet(C), and the encoding for C corresponds to the map f that makes diagram given in the manual commute for the encoding fp. Note that f(v) = c and fp((Phi_s|Jp)(v)) = cp. Moreover, since fp is systematic, (cp)_Ip = (Phi_s|Jp)(v). The encodings f and fp coincide with the ones provided by function ZpInformationSpace(C)",0,2,0,0,0,0,0,0,0,160,,0,0,202,,192,160,-38,-38,-38,-38
